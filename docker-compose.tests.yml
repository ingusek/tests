version: "3.7"

services:
  nginx:
    container_name: nginx
    image: nginx:stable
    depends_on:
      - api
      - backend
    networks:
      - internal
    volumes:
      - ./nginx/image-files/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8081:8081

  mysql:
    container_name: mysql
    image: mysql:8.0
    networks:
      - internal
    ports:
      - 3307:3306
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=boilerplate
      - TZ=Australia/Melbourne

  migration:
    container_name: migration
    build:
      context: ./api
      target: dev-stage
    depends_on:
      - mysql
    networks:
      - internal
    # volumes:
    #   - ./api:/srv
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=boilerplate
      - DB_CONNECTION_LIMIT=10
      - DB_DEBUG=true
      - TZ=Australia/Melbourne
    command:
      - /usr/local/bin/migration.sh

  api:
    container_name: api
    build:
      context: ./api
      target: dev-stage
    depends_on:
      - mysql
      - migration
    networks:
      - internal
    # volumes:
    #   - ./api:/srv
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=boilerplate
      - DB_CONNECTION_LIMIT=10
      - DB_DEBUG=true
      - JWT_SECRET_KEY=aaGhu2foo7sheithePhai4Aef
      - JWT_EXPIRES_IN=6d
      - JWT_REFRESH_SECRET_KEY=7rtbSK6wR05cKn4jMBwIr0Fjs
      - JWT_REFRESH_EXPIRES_IN=7d
      - BCRYPT_SALTING_ROUND=10
      - API_URL=http://nginx:8081/api
      - BACKEND_URL=http://nginx:8081/backend
      - FRONTEND_URL=http://frontend
      - EMAIL_FROM_ADDRESS=support@boilerplate.local
      - EMAIL_FROM_NAME=Support
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_AUTH_USER=
      - SMTP_AUTH_PASS=
      - SMTP_DEBUG=true
      - SMTP_LOGGER=true
      - TZ=Australia/Melbourne

  frontend:
    container_name: frontend
    working_dir: /srv
    command: npm run init
    build:
      context: ./frontend
    depends_on:
      - api
    networks:
      - internal
    environment:
      - BASE_URL=/
      - API_URL=http://nginx:8081/api
    volumes:
      - ./frontend:/srv
    ports:
      - 80:80
  
  selenium:
    container_name: selenium
    working_dir: /tests
    build:
      context: selenium
      shm_size: 2g
    depends_on:
      - api
    environment:
      - APP_URL=http://frontend/
      - MAILHOG_URL=http://mailhog:8025/
      - LOGIN=ingusek
      - PASSWORD=test1234
      - EMAIL=ingus@wp.pl
      - FIRSTNAME=Jan
      - LASTNAME=Kowalski
    networks:
      - internal
    ports:
      - 4444:4444
      - 5900:5900
      - 7900:7900
    volumes:
      - ./tests/e2e:/tests

  robotframework:
    container_name: robotframework
    privileged: true
    build:
      context: ./robotframework
      dockerfile: Dockerfile      
      args:
        OWNER_ID: $OWNER_ID
        GROUP_ID: $GROUP_ID
    depends_on:
      - api
    environment:
      - APP_URL=http://frontend/
      - MAILHOG_URL=http://mailhog:8025/
      - LOGIN=ingusek
      - PASSWORD=test1234
      - EMAIL=ingus@wp.pl
      - FIRSTNAME=Jan
      - LASTNAME=Kowalski
      - DISPLAY_WIDTH=1600
      - DISPLAY_HEIGHT=968
      - RUN_XTERM=no
    mem_reservation: 2g
    shm_size: 2g
    cap_add:
      - SYS_ADMIN
    ports:
      - '8080:8080'
    volumes:
      - ./tests/e2e:/home/developer/tests
    networks:
      - internal

  backend:
    container_name: backend
    build:
      context: ./backend
      target: production-stage
      args:
        NODE_ENV: production
        BASE_URL: /backend/
    depends_on:
      - api
    networks:
      - internal
    environment:
      - BASE_URL=/backend/
      - API_URL=http://nginx:8081/api


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    networks:
      - internal
    ports:
      - 8025:8025
networks:
  internal:
    driver: bridge